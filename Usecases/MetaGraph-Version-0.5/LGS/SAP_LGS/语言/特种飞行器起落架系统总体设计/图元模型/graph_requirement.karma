   partial Graph graph_requirement
    Object object_note;
    Object object_requirement;
    Object object_functionalreq;
    Object object_interfacereq;
    Object object_performancereq;
    Object object_physicalreq;
    Object object_designconstraint;
    Relationship satisfied;
    Relationship trace;
    Relationship verify;
    Relationship derive;
    Relationship refine;
    Relationship contain;
    Constraint (
    bind connector(object_designconstraint,contain.contain_In),
    bind connector(object_interfacereq,contain.contain_In),
    bind connector(object_requirement,contain.contain_In),
    bind connector(object_physicalreq,contain.contain_In),
    bind connector(object_functionalreq,contain.contain_In),
    bind connector(object_performancereq,contain.contain_In),
    bind connector(object_designconstraint,contain.contain_Out),
    bind connector(object_interfacereq,contain.contain_Out),
    bind connector(object_requirement,contain.contain_Out),
    bind connector(object_physicalreq,contain.contain_Out),
    bind connector(object_functionalreq,contain.contain_Out),
    bind connector(object_performancereq,contain.contain_Out),
    bind connector(object_designconstraint,satisfied.satisfy_In),
    bind connector(object_interfacereq,satisfied.satisfy_In),
    bind connector(object_requirement,satisfied.satisfy_In),
    bind connector(object_physicalreq,satisfied.satisfy_In),
    bind connector(object_note,satisfied.satisfy_In),
    bind connector(object_functionalreq,satisfied.satisfy_In),
    bind connector(object_performancereq,satisfied.satisfy_In),
    bind connector(object_designconstraint,satisfied.satisfy_Out),
    bind connector(object_interfacereq,satisfied.satisfy_Out),
    bind connector(object_requirement,satisfied.satisfy_Out),
    bind connector(object_physicalreq,satisfied.satisfy_Out),
    bind connector(object_note,satisfied.satisfy_Out),
    bind connector(object_functionalreq,satisfied.satisfy_Out),
    bind connector(object_performancereq,satisfied.satisfy_Out),
    bind connector(object_designconstraint,trace.trace_In),
    bind connector(object_interfacereq,trace.trace_In),
    bind connector(object_requirement,trace.trace_In),
    bind connector(object_physicalreq,trace.trace_In),
    bind connector(object_note,trace.trace_In),
    bind connector(object_functionalreq,trace.trace_In),
    bind connector(object_performancereq,trace.trace_In),
    bind connector(object_designconstraint,trace.trace_Out),
    bind connector(object_interfacereq,trace.trace_Out),
    bind connector(object_requirement,trace.trace_Out),
    bind connector(object_physicalreq,trace.trace_Out),
    bind connector(object_note,trace.trace_Out),
    bind connector(object_functionalreq,trace.trace_Out),
    bind connector(object_performancereq,trace.trace_Out),
    bind connector(object_designconstraint,verify.verify_In),
    bind connector(object_interfacereq,verify.verify_In),
    bind connector(object_requirement,verify.verify_In),
    bind connector(object_physicalreq,verify.verify_In),
    bind connector(object_note,verify.verify_In),
    bind connector(object_functionalreq,verify.verify_In),
    bind connector(object_performancereq,verify.verify_In),
    bind connector(object_designconstraint,verify.verify_Out),
    bind connector(object_interfacereq,verify.verify_Out),
    bind connector(object_requirement,verify.verify_Out),
    bind connector(object_physicalreq,verify.verify_Out),
    bind connector(object_note,verify.verify_Out),
    bind connector(object_functionalreq,verify.verify_Out),
    bind connector(object_performancereq,verify.verify_Out),
    bind connector(object_designconstraint,derive.derive_In),
    bind connector(object_interfacereq,derive.derive_In),
    bind connector(object_requirement,derive.derive_In),
    bind connector(object_physicalreq,derive.derive_In),
    bind connector(object_note,derive.derive_In),
    bind connector(object_functionalreq,derive.derive_In),
    bind connector(object_performancereq,derive.derive_In),
    bind connector(object_designconstraint,derive.derive_Out),
    bind connector(object_interfacereq,derive.derive_Out),
    bind connector(object_requirement,derive.derive_Out),
    bind connector(object_physicalreq,derive.derive_Out),
    bind connector(object_note,derive.derive_Out),
    bind connector(object_functionalreq,derive.derive_Out),
    bind connector(object_performancereq,derive.derive_Out),
    bind connector(object_designconstraint,refine.refine_In),
    bind connector(object_interfacereq,refine.refine_In),
    bind connector(object_requirement,refine.refine_In),
    bind connector(object_physicalreq,refine.refine_In),
    bind connector(object_note,refine.refine_In),
    bind connector(object_functionalreq,refine.refine_In),
    bind connector(object_performancereq,refine.refine_In),
    bind connector(object_designconstraint,refine.refine_Out),
    bind connector(object_interfacereq,refine.refine_Out),
    bind connector(object_requirement,refine.refine_Out),
    bind connector(object_physicalreq,refine.refine_Out),
    bind connector(object_note,refine.refine_Out),
    bind connector(object_functionalreq,refine.refine_Out),
    bind connector(object_performancereq,refine.refine_Out),
    );
    annotation(
        localLabel="需求图",
        type = diagram,
        description="",
       );
        end graph_requirement;
